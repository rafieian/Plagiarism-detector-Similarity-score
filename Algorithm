Input: Document Original ,Document Suspect
Output: a similarity bewteen Document Original and Document Suspect

 select Document Original ;
 for each word i in String O {
//extra words removal
If compare(word i ,extrawords)==true then Remove word i ;}
String O(word i )=Document Original ;
}
Void find repeats();
//calculate and find nmber of repeats of each word and put in Result i .
for each word i in String O {
//find all synsets of Words in Original Doc
Void sysnset();// find all synsets of String
}
for each word i in String O {
Void removeDupsSorted();}
// Remove all duplicates of each word from string;
//------------------------
 select Document Suspect ;
 String S(word i )=Document Suspect ;

for each word i in String S {
//extra words removal
If compare(word i ,extrawords)==true then Remove word i ;}
}
Void find repeats();
//calculate and find nmber of repeats of each word and put in Result j .
for each word i in String S {
//find all synsets of Words in Original Doc
Void sysnset();// find all synsets of String
}
for each word i in String S {
Void removeDupsSorted();}
// Start of calculating unity:
for (till end of string ) and string S){
if (string O intersec string S) then Resultx=Ri+Rj;  //Ri= number of repeats wordi in a Doc
Result Overal1 = Result overal +Resultx;
}
for (till end of string ) and string S){
Resultx=Ri+Rj;  
Result Overal2 = Result overal +Resultx;
}
Similarity=Resultoveral1/Resultoveral2.
//END
